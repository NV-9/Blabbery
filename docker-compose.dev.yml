
services:
  backend:
    container_name: blabbery_backend
    image: blabbery_backend
    restart: always
    build:
      context: .
      dockerfile: ./compose/dev/django/Dockerfile
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
      - ./build:/app/build
    ports:
      - 8000:8000
    networks:
      - blabbery_network
  
  redis:
    container_name: blabbery_redis
    image: redis:alpine
    restart: always
    volumes:
      - redis-data:/data
    networks:
      - blabbery_network

  frontend: 
    container_name: blabbery_frontend
    image: blabbery_frontend
    restart: always
    build:
      context: .
      dockerfile: ./compose/dev/node/Dockerfile
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    env_file:
      - .env
    depends_on:
      - backend
    volumes:
      - ./front/web/:/app:delegated
      - ./build:/app/build
      - /app/node_modules
    ports:
      - 5173:5173
    networks:
      - blabbery_network
  
  db:
    container_name: blabbery_db
    image: postgres:14-alpine
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - postgres-data-backups:/backups
    networks:
      - blabbery_network

volumes:
  redis-data:
  postgres-data:
  postgres-data-backups:

networks:
  blabbery_network: 
    driver: bridge